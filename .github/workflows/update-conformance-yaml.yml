name: update-conformance-yaml

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 */3 * * *"
  push:
    paths:
      - hack/generate-conformanceyaml.sh

jobs:
  dumper:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: configure system
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          gh auth login --with-token < <(echo ${{ secrets.GITHUB_TOKEN }})
          gh auth status
      - name: produce tag dump
        run: |
          ./hack/generate-conformanceyaml.sh
      - name: commit and push if there are changes
        run: |
          if git status --porcelain | grep --regexp='kodata/conformance-testdata/v.*/$'; then
            echo changes detected
          else
            exit 0
          fi
          TIMESTAMP="$(git log -n1 --pretty='format:%cd' --date=format:'%Y-%m-%d-%H-%M')"
          NEW_BRANCH="conformance-yaml-update-for-${TIMESTAMP}"
          git add ./kodata/conformance-testdata/**/conformance.yaml
          git branch "${NEW_BRANCH}"
          git checkout "${NEW_BRANCH}"
          git commit -s -m "update conformance yaml for ${TIMESTAMP}"
          git push origin "${NEW_BRANCH}"
          gh pr create --title "Update conformance yaml ${TIMESTAMP}" --body "updates conformance yaml for ${TIMESTAMP}"
          gh pr merge --merge --auto "${NEW_BRANCH}"
      - uses: gautamkrishnar/keepalive-workflow@v1 

